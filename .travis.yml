---
language: python

sudo: required
dist: trusty

cache:
  - pip

before_install:
  - pip install --upgrade pip
  - pip install ansible
  - ansible-galaxy install --role-file requirements.yml
  - ansible-playbook --inventory localhost, --connection local before_install.yml --extra-vars "ara_configuration_file=${TRAVIS_BUILD_DIR}/ansible/ansible.cfg"

script:
  - cd terraform
  - ssh-keygen -f id_rsa -N ""
  - terraform init
  - terraform apply -auto-approve -var="do_token=${do_token}" -var="cloudflare_email=${cloudflare_email}" -var="cloudflare_token=${cloudflare_token}"
  - cd ../ansible
  - ansible --version
  - cat ansible.cfg
  - ansible-galaxy install --role-file mail-requirements.yml
  - ansible-galaxy install --role-file infrastructure-requirements.yml
  - ansible-galaxy install --role-file webapp-requirements.yml
  - ansible-galaxy install --role-file tooling-requirements.yml
  - ansible-playbook --inventory inventory --limit "receiving-mailserver,outgoing-mailserver,mailserver-client" wait.yml
  - ansible-playbook --inventory inventory mail.yml
  - ansible-playbook --inventory inventory --limit "rsyslog-server,rsyslog-client" wait.yml
  - ansible-playbook --inventory inventory infrastructure.yml
  - ansible-playbook --inventory inventory --limit "application-server,web-server" wait.yml
  - ansible-playbook --inventory inventory webapp.yml
  - ansible-playbook --inventory inventory --limit "databaseservers,webservers" wait.yml
  - ansible-playbook --inventory inventory tooling.yml
  - sleep 180
  - ara generate html ../ansible-integration

deploy:
  - provider: pages
    repo: robertdebock/ansible-integration
    target-branch: gh-pages
    local-dir: "ansible-integration"
    skip-cleanup: true
    github-token: "${github_token}"
    keep-history: false
    on:
      branch: master

after_script:
  - cd ../terraform
  - terraform destroy -auto-approve -var="do_token=${do_token}" -var="cloudflare_email=${cloudflare_email}" -var="cloudflare_token=${cloudflare_token}"

